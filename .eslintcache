[{"/Users/caitlinklotz/Documents/Juno College/bootcamp/projects/project6/caitlin-inga-victor-saeed-project-six/src/index.js":"1","/Users/caitlinklotz/Documents/Juno College/bootcamp/projects/project6/caitlin-inga-victor-saeed-project-six/src/reportWebVitals.js":"2","/Users/caitlinklotz/Documents/Juno College/bootcamp/projects/project6/caitlin-inga-victor-saeed-project-six/src/App.js":"3","/Users/caitlinklotz/Documents/Juno College/bootcamp/projects/project6/caitlin-inga-victor-saeed-project-six/src/SocialEvents.js":"4","/Users/caitlinklotz/Documents/Juno College/bootcamp/projects/project6/caitlin-inga-victor-saeed-project-six/src/ResultsPage.js":"5","/Users/caitlinklotz/Documents/Juno College/bootcamp/projects/project6/caitlin-inga-victor-saeed-project-six/src/firebase.js":"6"},{"size":506,"mtime":1607378703707,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1607199401470,"results":"9","hashOfConfig":"8"},{"size":3238,"mtime":1607378703706,"results":"10","hashOfConfig":"8"},{"size":2757,"mtime":1607378703707,"results":"11","hashOfConfig":"8"},{"size":6345,"mtime":1607383049315,"results":"12","hashOfConfig":"8"},{"size":529,"mtime":1607378703707,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"lrz5fs",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"16"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"/Users/caitlinklotz/Documents/Juno College/bootcamp/projects/project6/caitlin-inga-victor-saeed-project-six/src/index.js",[],["29","30"],"/Users/caitlinklotz/Documents/Juno College/bootcamp/projects/project6/caitlin-inga-victor-saeed-project-six/src/reportWebVitals.js",[],"/Users/caitlinklotz/Documents/Juno College/bootcamp/projects/project6/caitlin-inga-victor-saeed-project-six/src/App.js",["31","32","33","34"],"import { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport SocialEvents from './SocialEvents.js';\nimport ResultsPage from './ResultsPage.js';\nimport './sass/App.scss';\n\n\n/* PSEUDOCODE\n  - Firebase --> VIEW ONE\n    - explain to the user what the app does\n    - read from the database and display six cards on screen\n      - two rows of three\n      - details for database\n        - name (Date Night)\n        - Type (Food & Drink)\n        - PartySize (2)\n        - Time\n        - Date\n    - ask the user to select one of the event cards\n    - onChange save the selected card to state\n    - onSubmit/onClick pass state through props to the method that displays that event to VIEW TWO\n      - the date will be used for the axios call\n      \n  - VIEW TWO\n    - Axios\n      - endpoint?:  http://api.tvmaze.com/schedule?country=:countrycode&date=:date\n        - country: CA\n          - param in axios call (hardcoded)\n          - pick six days that have information\n        - date: YEAR-MO-DA (variable)\n      - make the API call based on the above parameters\n      - save that response to our state array object\n    - display all tv shows onto the page for that date\n    - pick genre\n      - user picks a genre from a pre-defined list\n        - dropdown menu\n      - onChange save selected genre to state\n      - submit/click handler will trigger:\n        - filter through the axios call that is saved in state to find the tv shows that match the chosen genre\n          - save the matching shows in a separate array in state\n    - map through array and render TV shows on the screen and apply filter to narrow down by genre\n    - allow the user to start over via button that will send them back to VIEW ONE\n\n    - REVIEW does time zone matter?\n    - retrieve from API:\n      - airdate --> YEAR-MO-DA\n      - airstamp?\n        - NOTE airstamp is UTC\n      - airtime --> 24hr clock\n        - NOTE airtime is AST\n      - id\n      - image\n      - show\n        - genres\n          - NOTE check if the array is empty\n        - image\n          - NOTE check if the object is empty\n          - check if first image property is empty/null\n        - language --> English only\n        - name\n        - official site --> STRETCH\n        - rating? --> some are null\n        - runtime --> STRETCH\n        - schedule\n          - days (array)\n          - time --> if airtime is null? error handling?\n        - status\n          - NOTE check for \"Running\" status\n        - summary --> STRETCH\n\n        - NOTE find alt text!\n          - use name (for now)\n            - show name + episode name/number\n\n\n    Good job Team! :)\n*/\n\n\n// {/* STRETCH: Homepage --> TALK TO CLIENT */ }\n\n// {/* COMPONENT ONE: SocialEvents */ }\n// {/* contains social event cards, title, INSTRUCTIONS */ }\n\n// {/* COMPONENT TWO: ResultsPage */ }\n// {/* contains: social event component, genre selection, filtered tv shows component (AXIOS), pick again button */ }\n\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    \n  }\n\n  componentDidMount() {\n\n  }\n\n  // Display data\n  render() {\n    return (\n      <div className=\"App\">\n        <SocialEvents/>\n        <ResultsPage />\n      </div>\n    );\n  }\n}\nexport default App;\n","/Users/caitlinklotz/Documents/Juno College/bootcamp/projects/project6/caitlin-inga-victor-saeed-project-six/src/SocialEvents.js",["35","36","37"],"import { Component } from 'react';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\n// \nimport firebase from './firebase';\n\n\n\n\nclass SocialEvents extends Component {\nconstructor() {\nsuper();\nthis.state = {\n    socialEvents: [],\n    // userInput: ''\n}\n}\n\n\ncomponentDidMount() {\n\n// Variable that holds a reference to our database\nconst dbRef = firebase.database().ref();\ndbRef.on('value', (response) => {\n\n    // Here we're creating a variable to store the new state we want to introduce to our app\n    const newState = [];\n\n    // Here we store the response from our query to Firebase inside of a variable called data\n    // .val() is a Firebase method that gets us the information we want\n    const data = response.val();\n\n    console.log(response.val());\n\n    // data is an object, so we iterate through it using a for in loop to access each book name \n    for (let key in data) {\n\n    // inside the loop, we push each book name to an array we already created inside the .on() function called newState\n    newState.push({ key: key, eventDetails: data[key] });\n    }\n\n    // then, we call this.setState in order to update our component's state using the local array newState\n    this.setState({\n    socialEvents: newState\n    });\n\n    console.log(this.state.socialEvents)\n\n});\n}\n\n\n\nhandleChange = (event) => {\n// we're telling React to update the state of our `App` component to be \n// equal to whatever is currently the value of the input field\n\nthis.setState({\n    userInput: event.target.id\n}, () => { console.log(this.state.userInput)});\n// console.log(this.state.userInput)\n}\n\n\nsubmitForm = (event) => {\nevent.preventDefault();\nthis.setState({\n    selectedEvent: this.state.userInput\n})\nconsole.log(this.state.selectedEvent)\n}\n\n// Display data\nrender() {\nreturn (\n    <div className=\"SocialEvents\">\n    <form>\n        {this.state.socialEvents.map((eachEvent) => {\n        return (\n            <div key={eachEvent.key} onChange={this.handleChange} >\n            <input \n                // checked={this.state.userInput === eachEvent.key}\n                type=\"radio\" className=\"check\" id={eachEvent.key} name=\"socialEventCards\" value={eachEvent.key} required/>\n            <label htmlFor={eachEvent.key}>\n                <ul>\n                <li><h2>Name: {eachEvent.eventDetails.name}</h2></li>\n                <li>Party Size: {eachEvent.eventDetails.partySize}</li>\n                <li>Type: {eachEvent.eventDetails.type}</li>\n                <li>Date: </li>\n                <li>Time: </li>\n                </ul>\n            </label>\n            </div>\n        )\n        })}\n        <button onClick={this.submitForm} className=\"submit\" type=\"submit\">Submit</button>\n    </form>\n    </div>\n);\n}\n}\n\nexport default SocialEvents;\n","/Users/caitlinklotz/Documents/Juno College/bootcamp/projects/project6/caitlin-inga-victor-saeed-project-six/src/ResultsPage.js",["38","39","40","41"],"/Users/caitlinklotz/Documents/Juno College/bootcamp/projects/project6/caitlin-inga-victor-saeed-project-six/src/firebase.js",[],{"ruleId":"42","replacedBy":"43"},{"ruleId":"44","replacedBy":"45"},{"ruleId":"46","severity":1,"message":"47","line":2,"column":27,"nodeType":"48","messageId":"49","endLine":2,"endColumn":33},{"ruleId":"46","severity":1,"message":"50","line":2,"column":35,"nodeType":"48","messageId":"49","endLine":2,"endColumn":40},{"ruleId":"46","severity":1,"message":"51","line":2,"column":42,"nodeType":"48","messageId":"49","endLine":2,"endColumn":46},{"ruleId":"52","severity":1,"message":"53","line":91,"column":3,"nodeType":"54","messageId":"55","endLine":94,"endColumn":4},{"ruleId":"46","severity":1,"message":"47","line":2,"column":27,"nodeType":"48","messageId":"49","endLine":2,"endColumn":33},{"ruleId":"46","severity":1,"message":"50","line":2,"column":35,"nodeType":"48","messageId":"49","endLine":2,"endColumn":40},{"ruleId":"46","severity":1,"message":"51","line":2,"column":42,"nodeType":"48","messageId":"49","endLine":2,"endColumn":46},{"ruleId":"46","severity":1,"message":"50","line":2,"column":10,"nodeType":"48","messageId":"49","endLine":2,"endColumn":15},{"ruleId":"46","severity":1,"message":"51","line":2,"column":17,"nodeType":"48","messageId":"49","endLine":2,"endColumn":21},{"ruleId":"46","severity":1,"message":"56","line":4,"column":8,"nodeType":"48","messageId":"49","endLine":4,"endColumn":14},{"ruleId":"46","severity":1,"message":"57","line":6,"column":7,"nodeType":"48","messageId":"49","endLine":6,"endColumn":19},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Route' is defined but never used.","'Link' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Select' is defined but never used.","'genreOptions' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]